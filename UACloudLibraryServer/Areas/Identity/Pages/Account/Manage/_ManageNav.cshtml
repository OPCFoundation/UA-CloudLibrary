@inject SignInManager<IdentityUser> SignInManager

<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Profile</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">Email</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Password</a></li>

    @{
        var externalLogins = await SignInManager.GetExternalAuthenticationSchemesAsync().ConfigureAwait(false);
        if (externalLogins.Any())
        {
            <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
        }

        if (!string.IsNullOrEmpty(Environment.GetEnvironmentVariable("APIKeyAuth")))
        {
            <li class="nav-item"><a class="nav-link @ManageNavPages.ManageApiKeysNavClass(ViewContext)" id="manage-api-keys" asp-page="./ManageApiKeys">API Keys</a></li>
        }

        <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">Personal data</a></li>
    }
</ul>
